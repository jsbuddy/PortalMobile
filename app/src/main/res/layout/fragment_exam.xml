<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    tools:context=".ui.exam.ExamFragment">

    <data>

        <variable
            name="viewModel"
            type="com.example.portal.ui.exam.ExamViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <com.google.android.flexbox.FlexboxLayout
            android:id="@+id/info"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginVertical="10dp"
            android:background="@color/danger"
            android:paddingHorizontal="20dp"
            android:paddingVertical="20dp"
            app:justifyContent="space_between"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text='@{"Questions " + (viewModel.current + 1) + "/" + viewModel.questions.size()}'
                android:textColor="@color/white"
                android:textSize="16sp"
                android:textStyle="bold" />

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text='@{"Time left: " + viewModel.timer}'
                android:textColor="@color/white"
                android:textSize="16sp"
                android:textStyle="bold" />
        </com.google.android.flexbox.FlexboxLayout>


        <ProgressBar
            android:id="@+id/progressBar"
            style="?android:attr/progressBarStyleHorizontal"
            android:layout_width="0dp"
            android:layout_height="3dp"
            android:max="@{viewModel.questions.size()}"
            android:progress="@{viewModel.answers.size()}"
            android:progressTint='@{viewModel.answers.size() != viewModel.questions.size() ? @color/warning : @color/success}'
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toBottomOf="@id/info" />

        <ScrollView
            android:id="@+id/content"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            app:layout_constraintBottom_toTopOf="@id/actions"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toBottomOf="@id/info">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:paddingHorizontal="15dp">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="50dp"
                    android:layout_marginBottom="50dp"
                    android:padding="10dp"
                    android:text="@{viewModel.questions[viewModel.current].question}"
                    android:textSize="18sp" />

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="15dp"
                    android:background="@{viewModel.answers[viewModel.questions[viewModel.current].id] == 1 ? @drawable/option_selected : @drawable/option_unselected}"
                    android:clickable="true"
                    android:gravity="center_vertical"
                    android:onClick="@{() -> viewModel.addAnswer(1)}"
                    android:padding="20dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="@{viewModel.questions[viewModel.current].options[0].option}" />
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="15dp"
                    android:background="@{viewModel.answers[viewModel.questions[viewModel.current].id] == 2 ? @drawable/option_selected : @drawable/option_unselected}"
                    android:clickable="true"
                    android:gravity="center_vertical"
                    android:onClick="@{() -> viewModel.addAnswer(2)}"
                    android:padding="20dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="@{viewModel.questions[viewModel.current].options[1].option}" />

                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="15dp"
                    android:background="@{viewModel.answers[viewModel.questions[viewModel.current].id] == 3 ? @drawable/option_selected : @drawable/option_unselected}"
                    android:clickable="true"
                    android:gravity="center_vertical"
                    android:onClick="@{() -> viewModel.addAnswer(3)}"
                    android:padding="20dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="@{viewModel.questions[viewModel.current].options[2].option}" />
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="15dp"
                    android:background="@{viewModel.answers[viewModel.questions[viewModel.current].id] == 4 ? @drawable/option_selected : @drawable/option_unselected}"
                    android:clickable="true"
                    android:gravity="center_vertical"
                    android:onClick="@{() -> viewModel.addAnswer(4)}"
                    android:padding="20dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="@{viewModel.questions[viewModel.current].options[3].option}" />
                </LinearLayout>
            </LinearLayout>
        </ScrollView>

        <androidx.constraintlayout.widget.ConstraintLayout
            android:id="@+id/actions"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:paddingHorizontal="15dp"
            android:paddingVertical="20dp"
            app:justifyContent="space_between"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent">

            <com.google.android.material.button.MaterialButton
                style="@style/Widget.MaterialComponents.Button.TextButton"
                visibleIf="@{viewModel.current > 0}"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:onClick="@{() -> viewModel.previousQuestion()}"
                android:text="@string/previous"
                android:textColor="@color/muted"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <com.google.android.material.button.MaterialButton
                style="@style/Widget.MaterialComponents.Button.TextButton"
                visibleIf="@{viewModel.current &lt; viewModel.questions.size() - 1}"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:onClick="@{() -> viewModel.nextQuestion()}"
                android:text="@string/next"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintRight_toRightOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                app:rippleColor="@color/onBackgroundTranslucent" />
        </androidx.constraintlayout.widget.ConstraintLayout>
    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>